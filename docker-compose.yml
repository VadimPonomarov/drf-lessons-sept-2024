services:
  app:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    environment:
      POSTGRES_HOST: "${POSTGRES_HOST:-pg}"
      POSTGRES_PORT: "${POSTGRES_PORT:-5432}"
      POSTGRES_NAME: "${POSTGRES_NAME:-db}"
      POSTGRES_USER: "${POSTGRES_USER:-user}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"

      MINIO_ENDPOINT: "${MINIO_ENDPOINT:-minio:9000}"
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY:-root}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY:-password}"
    env_file:
      - .env.example
    ports:
      - "8888:8000"
    restart: on-failure
    depends_on:
      - pg
      - minio
      - rabbitmq
      - celery
    command: >
      sh -c "python manage.py wait_db && python manage.py migrate && python manage.py 
      runserver 0.0.0.0:8000"

  pg:
    image: postgres
    environment:
      POSTGRES_DB: "${POSTGRES_NAME:-db}"
      POSTGRES_USER: "${POSTGRES_USER:-user}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
    ports:
      - "5432:5432"
    volumes:
      - ./backend/db:/var/lib/postgresql/data

  web:
    image: nginx:alpine
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./client:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/static:/usr/share/nginx/docs

  minio:
    image: minio/minio
    container_name: minio
    env_file:
      - .env.example
    ports:
      - "9000:9000"    # MinIO API
      - "9001:9001"    # MinIO console
    volumes:
      - ./minio/data:/data                  # MinIO data storage
      - ./minio/config:/root/.minio         # MinIO configuration

    command: server /data --console-address ":9001"

  mailing:
    build: ./mailing
    environment:
      - APP_CONFIG__DOCKER=True
    env_file:
      - ./mailing/src/.env.example
    ports:
      - "8001:8000"
    depends_on:
      - rabbitmq
      - celery
      - app
    volumes:
      - ./mailing/src:/app
    command: >
      sh -c "uvicorn main:main_app --host 0.0.0.0 --port 8000"


  rabbitmq:
    image: rabbitmq:management-alpine
    hostname: rabbitmq
    restart: always
    env_file:
      - .env.example
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672


  celery:
    build:
      context: ./mailing
    volumes:
      - ./mailing/src:/app
    env_file:
      - .env.example
    restart: always
    depends_on:
      - rabbitmq
    command: >
      sh -c "celery -A celery_config worker -l info -P solo"

  flower:
    image: mher/flower:0.9.7
    restart: on-failure
    depends_on:
      - rabbitmq
      - celery
    ports:
      - "5555:5555"
    command: [ "flower", "--broker=pyamqp://guest:guest@rabbitmq:5672//", "--port=5555" ]

#  adminer:
#    image: adminer
#    ports:
#      - "8080:8080"
#
#  pgadmin:
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.org
#      PGADMIN_DEFAULT_PASSWORD: admin
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    ports:
#      - "5050:80"
